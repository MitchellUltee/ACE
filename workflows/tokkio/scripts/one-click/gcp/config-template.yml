schema_version: '0.0.7'
name: 'franka'
spec:
  infra:
    csp: 'gcp'
    backend:
      bucket: 'franka-bucket'
      credentials: "{{ lookup('env', 'CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE') }}"
    provider:
      project: "{{ lookup('env', 'CLOUDSDK_CORE_PROJECT') }}"
      credentials: "{{ lookup('env', 'CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE') }}"
    configs:
      cns:
        override_values:
          cns_nvidia_driver: yes
      user_access_cidrs:
        - '<replace-with-list-of-user-ip-cidrs-from-where-application-ui-and-api-will-be-allowed-access>'
      dev_access_cidrs:
        - '<replace-with-list-of-developer-ip-cidrs-from-where-ssh-access-should-be-allowed>'
      region: 'europe-west4'
      ui_bucket_location:
        location: '<replace-with-gcp-location-to-create-ui-bucket-in>'
        region: '<replace-with-gcp-region-to-create-ui-bucket-in>'
        alternate_region: '<replace-with-gcp-region-to-be-used-to-create-ui-bucket-that-need-dual-region-in>'
      ssh_public_key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh') }}"
      ssh_private_key_path: "{{ lookup('env', 'HOME') + './ssh' }}"
      additional_ssh_public_keys: []
      dns_zone_name: 'franka.capgemini.com'
      enable_cdn: false
      clusters:
        app:
          private_instance: true
          master:
            type: 'n1-standard-1'
            guest_accelerators:
            - type: 'nvidia-t4'
              count: '1'
          features:
            cns: true
            app: true
        turn:
          private_instance: false
          master:
            type: 'n1-standard-1'
            guest_accelerators: []
          features:
            cns: false
            rp: false
            coturn: false
  platform:
    configs:
      k8s_secrets:
        - name: 'ngc-api-key-secret'
          type: 'Opaque'
          entries:
            - key: NGC_CLI_API_KEY
              value: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
        - name: 'ngc-docker-reg-secret'
          type: 'dockerconfigjson'
          registry_name: "nvcr.io"
          username: '$oauthtoken'
          password: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
    secrets:
      ngc_cli_api_key: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
  app:
    configs:
      app_settings:
        k8s_secrets:
          - name: 'ngc-api-key-secret'
            type: 'Opaque'
            entries:
              - key: NGC_CLI_API_KEY
                value: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
          - name: 'openai-key-secret'
            type: 'Opaque'
            entries:
              - key: OPENAI_API_KEY
                value: "{{ lookup('env', 'OPENAI_API_KEY') }}"
          - name: 'nvidia-api-key-secret'
            type: 'Opaque'
            entries:
              - key: NVIDIA_API_KEY
                value: "{{ lookup('env', 'NVIDIA_API_KEY') }}"
          - name: 'ngc-docker-reg-secret'
            type: 'dockerconfigjson'
            registry_name: "nvcr.io"
            username: '$oauthtoken'
            password: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
    secrets:
      ngc_cli_api_key: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
