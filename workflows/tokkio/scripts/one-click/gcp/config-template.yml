schema_version: '0.0.7'
name: 'franka'
spec:
  infra:
    csp: 'gcp'
    backend:
      bucket: 'franka-bucket'
      credentials: "{{ lookup('env', 'CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE') }}"
    provider:
      project: "{{ lookup('env', 'CLOUDSDK_CORE_PROJECT') }}"
      credentials: "{{ lookup('env', 'CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE') }}"
    configs:
      cns:
        # version: <replace-with-desired-cns-version-defaults-to-12.2>
        # git_ref: <replace-with-git-commit-hash-defaults-to-latest-commit-hash-of-master-branch>
        override_values:
          cns_nvidia_driver: yes 
          #gpu_driver_version: <replace-with-desired-gpu-driver-version>
      user_access_cidrs:
        - '0.0.0.0/0'
      dev_access_cidrs:
        - '0.0.0.0/0'
      region: 'europe-west4-c'
      ui_bucket_location:
        location: 'europe-west4-c'
        region: 'europe-west4-c'
        alternate_region: 'europe-west4-c'
      ssh_public_key: "{{ lookup('file', lookup('env', 'HOME') + 'replace-with-ssh-pub-key-path') }}"
      ssh_private_key_path: "{{ lookup('env', 'HOME') + 'replace-with-ssh-pem-key-path' }}"
      additional_ssh_public_keys: []
      dns_zone_name: 'franka-zone'
      # api_sub_domain: '<replace-with-the-subdomain-to-be-used-for-the-api-defaults-to-$name-api>'
      # ui_sub_domain: '<replace-with-the-subdomain-to-be-used-for-the-ui-defaults-to-$name-ui>'
      # elastic_sub_domain: '<replace-with-the-subdomain-to-be-used-for-the-elastic-defaults-to-$name-elastic>'
      # kibana_sub_domain: '<replace-with-the-subdomain-to-be-used-for-the-kibana-defaults-to-$name-kibana>'
      # grafana_sub_domain: '<replace-with-the-subdomain-to-be-used-for-the-grafana-defaults-to-$name-grafana>'
      #turn_server_provider: '<one-of-allowed-implementation-rp|coturn|twilio-defaults-to-coturn>'
      enable_cdn: false
      clusters:
        app:
          private_instance: true
          master:
            type: 'n1-standard-1'
            guest_accelerators:
            - type: 'NVIDIA T4'
              count: '1'
          features:
            cns: true
            app: true
        turn:
          private_instance: false
          master:
            type: 'n1-standard-1'
            guest_accelerators: []
          features:
            cns: false
            rp: false
            coturn: false
  platform:
    configs:
      # k8s_namespace: '<replace-with-k8s-namespace-for-foundational-chart-to-deploy-defaults-to-platform>'
      k8s_secrets:
        - name: 'ngc-api-key-secret'
          type: 'Opaque'
          entries:
            - key: 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
              value: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
        - name: 'ngc-docker-reg-secret'
          type: 'dockerconfigjson'
          registry_name: "nvcr.io"
          username: '$oauthtoken'
          password: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
    secrets:
      ngc_cli_api_key: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
  app:
    configs:
      app_settings:
        # k8s_namespace: '<replace-with-k8s-namespace-for-app-chart-to-deploy-defaults-to-app>'
        # helm_chart:
          # repo:
            # enable: <true/false-defaults-to-true>
            # repo_url: '<replace-with-app-chart-helm-repo-url-defaults-to-https://helm.ngc.nvidia.com/nvidia/ace>'
            # chart_name: '<replace-with-app-chart-name-defaults-to-ucs-tokkio-app-base-3-stream-llm-rag-3d-ov>'
            # chart_version: '<replace-with-chart-version-defaults-to-'4.1.3'>'
            # release_name: '<replace-with-release-name-for-helm-deploy-defaults-to-'tokkio-app'>'
            # user_value_override_files: ['list-of-absolute-path-of-value-override-files']
          # local:
            #  enable: <true/false-defaults-to-false>
            #  path: '<absolute-path-of-helm-chart-present-locally>'
            #  release_name: '<replace-with-release-name-for-helm-deploy-defaults-to-'tokkio-app'>'
            #  user_value_override_files: ['list-of-absolute-path-of-value-override-files']
        k8s_secrets:
          - name: 'ngc-api-key-secret'
            type: 'Opaque'
            entries:
              - key: NGC_CLI_API_KEY
                value: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
          - name: 'openai-key-secret'
            type: 'Opaque'
            entries:
              - key: OPENAI_API_KEY
                value: "{{ lookup('env', 'OPENAI_API_KEY') }}"
          - name: 'nvidia-api-key-secret'
            type: 'Opaque'
            entries:
              - key: NVIDIA_API_KEY
                value: "{{ lookup('env', 'NVIDIA_API_KEY') }}"
          - name: 'ngc-docker-reg-secret'
            type: 'dockerconfigjson'
            registry_name: "nvcr.io"
            username: '$oauthtoken'
            password: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
          # #NOTE: Uncomment below secret when deploying UE chart - ucs-tokkio-app-base-3-stream-retail-3d-ue
          # - name: 'ghcr-docker-reg-secret'
          #   type: 'dockerconfigjson'
          #   registry_name: "ghcr.io"
          #   username: "{{ lookup('env', 'GITHUB_USERNAME') }}"
          #   password: "{{ lookup('env', 'GITHUB_ACCESS_TOKEN') }}"
      # turn_server_settings:
        # rp:
        #   # k8s_namespace: '<replace-with-k8s-namespace-for-rp-chart-to-deploy-defaults-to-rp>'
        #   # helm_chart:
        #   #   repo:
        #   #     repo_url: '<replace-with-rp-chart-helm-repo-url-defaults-to-https://helm.ngc.nvidia.com/nvidia/ace>'
        #   #     chart_name: '<replace-with-rp-chart-name-defaults-to-rproxy>'
        #   #     chart_version: '<replace-with-chart-version-defaults-to-0.0.8>'
        #   #     release_name: '<replace-with-release-name-for-helm-deploy-defaults-to-rp>'
        #   k8s_secrets:
        #     - name: 'ngc-docker-reg-secret'
        #       type: 'dockerconfigjson'
        #       registry_name: "nvcr.io"
        #       username: '$oauthtoken'
        #       password: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
        # #NOTE: Uncomment and update below section - coturn_settings in case turn_server_provider = coturn
        # coturn:
        #   username: '<replace-with-a-username-to-use-for-the-turnserver-defaults-to-foo>'
        #   password: '<replace-with-a-password-to-use-for-the-turnserver-defaults-to-bar>'
        #   realm: '<replace-with-a-realm-to-use-for-the-turnserver-defaults-to-mydummyt.org>'
        # #NOTE: # Uncomment and pass correct value for account_sid & auth_token for account_sid & account_sid  when turn_server_provider = twilio.
        # twilio:
        #   account_sid: '<replace-with-correct-twilio-account_sid-value-defaults-to-empty-string>'
        #   auth_token: '<replace-with-correct-twilio-auth_token-value-defailts-to-empty-string>'
      # ui_settings:
      #   resource:
      #     ngc:
      #       org: '<replace-with-ngc-org-defaults-to-nvidia>'
      #       team: '<replace-with-ngc-team-defaults-to-ace>'
      #       name: '<replace-with-ngc-resource-name-defaults-to-tokkio_ui>'
      #       version: '<replace-with-resource-version-defaults-to-5.0.0>'
      #       file: '<replace-with-resource-file-name-defaults-to-ui.tar.gz>'
      #   #NOTE: Uncomment user_env_vars when you need to pass ui configuration. it should be key: value format and its case sensitive.
      #   user_env_vars:
    secrets:
      ngc_cli_api_key: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
